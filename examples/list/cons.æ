import examples.list
import examples.bool
import examples.maybe.just
import examples.number

type cons a : list a
    x : a
    xs : list a

    fold nil cons = cons x xs
    foldr x0 f = f x (xs.foldr x0 f)
    foldl x0 f = xs.foldl (f x0 x) f
    head = just x
    append ys = cons x (xs.append ys)
    length = 1 + xs.length
    map f = cons (f x) (xs.map f)
    flatmap f = 
        ys = f x
        zs = xs.flatmap f
        ys.append zs
    filter f = (f x).if
        _ => cons x (xs.filter f)
        _ => xs.filter f
